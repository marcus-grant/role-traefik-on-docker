################################################################
# Global configuration
################################################################

# Enable debug mode
#
# Optional
# Default: false
#
debug = {{ traefik_debug }}

# Log level
#
# Optional
# Default: "ERROR"
#
# logLevel = "DEBUG"

# Entrypoints to be used by frontends that do not specify any entrypoint.
# Each frontend can specify its own entrypoints.
#
# Optional
# Default: ["http"]
#
defaultEntryPoints = ["http", "https"]

################################################################
# Entrypoints configuration
################################################################

[entryPoints]
  [entryPoints.{{ traefik_api_entrypoint }}]
    address = ":{{ traefik_api_port }}"
    [entryPoints.{{ traefik_api_entrypoint }}.auth]
      [entryPoints.{{ traefik_api_entrypoint }}.auth.basic]
        users = ["admin:{{ traefik_admin_encrypted_passwd }}"]
  [entryPoints.http]
    address = ":80"
    [entryPoints.http.redirect]
      entryPoint = "https"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]


################################################################
# Traefik logs configuration
################################################################

# Traefik logs
# Enabled by default and log to stdout
#
# Optional
#
# [traefikLog]

# Sets the filepath for the traefik log. If not specified, stdout will be used.
# Intermediate directories are created if necessary.
#
# Optional
# Default: os.Stdout
#
# filePath = "log/traefik.log"

# Format is either "json" or "common".
#
# Optional
# Default: "common"
#
# format = "common"

################################################################
# Access logs configuration
################################################################

# Enable access logs
# By default it will write to stdout and produce logs in the textual
# Common Log Format (CLF), extended with additional fields.
#
# Optional
#
# [accessLog]

# Sets the file path for the access log. If not specified, stdout will be used.
# Intermediate directories are created if necessary.
#
# Optional
# Default: os.Stdout
#
# filePath = "/path/to/log/log.txt"

# Format is either "json" or "common".
#
# Optional
# Default: "common"
#
# format = "common"

################################################################
# API and dashboard configuration
################################################################

# Enable API and dashboard
[api]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  entryPoint = "{{ traefik_api_entrypoint }}"

  # Enabled Dashboard
  #
  # Optional
  # Default: true
  #
  dashboard = true

################################################################
# Ping configuration
################################################################

# Enable ping
[ping]

  # Name of the related entry point
  #
  # Optional
  # Default: "traefik"
  #
  # entryPoint = "traefik"

################################################################
# Docker configuration backend
################################################################

# Enable Docker configuration backend (samples below)
[docker]
domain = "{{ traefik_domain }}"
watch = true
network = "{{ traefik_docker_network }}"

# Docker server endpoint. Can be a tcp or a unix socket endpoint.
#
# Required
# Default: "unix:///var/run/docker.sock"
#
# endpoint = "tcp://10.10.10.10:2375"

# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
#
# Optional
# Default: ""
#
# domain = "docker.localhost"

# Expose containers by default in traefik
#
# Optional
# Default: true
# exposedByDefault = false


[acme]
email = "{{ traefik_admin_email }}"
storage = "acme.json"
entryPoint = "https"
onHostRule = true
# TODO: Should there be logging handling?
# acmeLogging = true
# TODO: Should there be onDemand cert creation?
# onDemand = false # create certificate when container is created

  [acme.httpChallenge]
  entryPoint = "http"

  # [acme.dnsChallenge]
  # provider = "cloudflare"
  # delayBeforeCheck = 0

  # TODO: Should we use TLS Challenge?
  # [acme.tlsChallenge]

  # TODO: Should we use ACME Domains?
  # [[acme.domains]]
  # main = ""


  # TODO: Should we be using the sans feature?
  # we request a certificate for everything, because why not.
  # sans = []
